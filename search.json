[{"path":"https://borninbradford.github.io/epivaultr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Born Bradford (Bradford Institute Health Research) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://borninbradford.github.io/epivaultr/articles/getting-started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting started with epivaultr","text":"epivaultr can installed GitHub using [devtools] package:","code":"devtools::install_github(\"BornInBradford/epivaultr\")"},{"path":"https://borninbradford.github.io/epivaultr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dan Mason. Author, maintainer.","code":""},{"path":"https://borninbradford.github.io/epivaultr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mason D (2024). epivaultr: Extract EpiVault data. R package version 0.1, https://borninbradford.github.io/epivaultr/.","code":"@Manual{,   title = {epivaultr: Extract EpiVault data},   author = {Dan Mason},   year = {2024},   note = {R package version 0.1},   url = {https://borninbradford.github.io/epivaultr/}, }"},{"path":"https://borninbradford.github.io/epivaultr/index.html","id":"epivaultr","dir":"","previous_headings":"","what":"Extract EpiVault data","title":"Extract EpiVault data","text":"R tools functions extracting data EpiVault, Born Bradford research data warehouse","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/ev_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to EpiVault — ev_connect","title":"Connect to EpiVault — ev_connect","text":"Connects specified EpiVault instance returns connection use epivaultr functions.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/ev_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to EpiVault — ev_connect","text":"","code":"ev_connect(   ev_server = getOption(\"ev_server\"),   ev_database = getOption(\"ev_database\"),   ev_driver = dplyr::coalesce(getOption(\"ev_driver\"), \"SQL Server\") )"},{"path":"https://borninbradford.github.io/epivaultr/reference/ev_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to EpiVault — ev_connect","text":"ev_server Name SQL Server instance ev_database Name EpiVault database ev_driver (default=\"SQL Server\") Name SQL Server driver","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/ev_connect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to EpiVault — ev_connect","text":"EpiVault connection object","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/ev_connect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to EpiVault — ev_connect","text":"ev_server ev_database required can either passed function parameters can placed global options (see examples). passed function parameters, override global options.","code":""},{"path":[]},{"path":"https://borninbradford.github.io/epivaultr/reference/ev_connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to EpiVault — ev_connect","text":"","code":"if (FALSE) {  # using global options options(ev_server = \"BHTS-RESEARC22A\") options(ev_database = \"EpiVault1\")  con <- ev_connect()  # using parameters - global options get overridden con <- ev_connect(ev_server = \"BHTS-RESRCH22DV\", ev_database = \"EpiVaultDV\")  }"},{"path":"https://borninbradford.github.io/epivaultr/reference/ev_disconnect.html","id":null,"dir":"Reference","previous_headings":"","what":"Disconnect from EpiVault — ev_disconnect","title":"Disconnect from EpiVault — ev_disconnect","text":"Disconnects EpiVault instance identified con","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/ev_disconnect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disconnect from EpiVault — ev_disconnect","text":"","code":"ev_disconnect(con)"},{"path":"https://borninbradford.github.io/epivaultr/reference/ev_disconnect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disconnect from EpiVault — ev_disconnect","text":"con EpiVault connection object","code":""},{"path":[]},{"path":"https://borninbradford.github.io/epivaultr/reference/ev_disconnect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disconnect from EpiVault — ev_disconnect","text":"","code":"if (FALSE) {  con <- ev_connect()  ev_disconnect(con)  }"},{"path":"https://borninbradford.github.io/epivaultr/reference/ev_simple_fetch.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple data fetcher — ev_simple_fetch","title":"Simple data fetcher — ev_simple_fetch","text":"Fetches data single table EpiVault returns data frame.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/ev_simple_fetch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple data fetcher — ev_simple_fetch","text":"","code":"ev_simple_fetch(con, project, table, visibility = 0, variables = character(0))"},{"path":"https://borninbradford.github.io/epivaultr/reference/ev_simple_fetch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple data fetcher — ev_simple_fetch","text":"con EpiVault connection object project Project name table Table name visibility (default=0) Maximum visibility level requested. See examples. variables (optional) Character vector variable names. just variable (column) names, .e. fully qualified. omitted, variables returned.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/ev_simple_fetch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple data fetcher — ev_simple_fetch","text":"data frame containing data requested","code":""},{"path":[]},{"path":"https://borninbradford.github.io/epivaultr/reference/ev_simple_fetch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple data fetcher — ev_simple_fetch","text":"","code":"if (FALSE) {  con <- ev_connect()  # fetch the whole table dat <- ev_simple_fetch(con,                        project = \"project1\",                        table = \"table1\",                        visibility = 0 )  # just fetch a couple of variables # NB. variables in the table tagged as 'required' will also be returned dat <- ev_simple_fetch(con,                        project = \"project1\",                        table = \"table1\",                        visibility = 0,                        variables = c(\"var11\", \"var13\", \"var44\") )  # use higher visibility level to access sensitive variables # special database permissions may be required  dat <- ev_simple_fetch(con,                        project = \"project1\",                        table = \"table1\",                        visibility = 9,                        variables = c(\"date_of_birth\") )                         }"},{"path":"https://borninbradford.github.io/epivaultr/reference/fetch_ev_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch data request from EpiVault — fetch_ev_data","title":"Fetch data request from EpiVault — fetch_ev_data","text":"Interprets ev_variables container, fetches data EpiVault returns ev_data container.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/fetch_ev_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch data request from EpiVault — fetch_ev_data","text":"","code":"fetch_ev_data(con, ev_vars, visibility = 0)"},{"path":"https://borninbradford.github.io/epivaultr/reference/fetch_ev_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch data request from EpiVault — fetch_ev_data","text":"con EpiVault connection object ev_vars ev_variables container visibility (default=0) Maximum visibility level requested. See examples.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/fetch_ev_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch data request from EpiVault — fetch_ev_data","text":"ev_data container","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/fetch_ev_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fetch data request from EpiVault — fetch_ev_data","text":"Passes ev_vars fetch_ev_meta_vars fetch_ev_meta_tabs get metadata ready processing, fetches tabular data EpiVault applying data labels. fetched data metadata returned ev_data container.","code":""},{"path":[]},{"path":"https://borninbradford.github.io/epivaultr/reference/fetch_ev_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch data request from EpiVault — fetch_ev_data","text":"","code":"if (FALSE) {  con <- ev_connect()  # read a variable data request file vars <- read_ev_variables(\"path/to/variables/file\")  # fetch the data from EpiVault - default visibility for standard data requests ev <- fetch_ev_data(con, vars)  # fetch the data from EpiVault - highest visibility to access sensitive variables ev <- fetch_ev_data(con, vars, visibility = 9)  }"},{"path":"https://borninbradford.github.io/epivaultr/reference/fetch_ev_meta_tabs.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch table metadata from EpiVault — fetch_ev_meta_tabs","title":"Fetch table metadata from EpiVault — fetch_ev_meta_tabs","text":"Interprets ev_variables container, fetches table metadata EpiVault returns data frame.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/fetch_ev_meta_tabs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch table metadata from EpiVault — fetch_ev_meta_tabs","text":"","code":"fetch_ev_meta_tabs(con, ev_vars)"},{"path":"https://borninbradford.github.io/epivaultr/reference/fetch_ev_meta_tabs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch table metadata from EpiVault — fetch_ev_meta_tabs","text":"con EpiVault connection object ev_vars ev_variables container","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/fetch_ev_meta_tabs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch table metadata from EpiVault — fetch_ev_meta_tabs","text":"data frame","code":""},{"path":[]},{"path":"https://borninbradford.github.io/epivaultr/reference/fetch_ev_meta_tabs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch table metadata from EpiVault — fetch_ev_meta_tabs","text":"","code":"if (FALSE) {  con <- ev_connect()  # read a variable data request file vars <- read_ev_variables(\"path/to/variables/file\")  # fetch table metadata from EpiVault meta <- fetch_ev_meta_tabs(con, vars)  }"},{"path":"https://borninbradford.github.io/epivaultr/reference/fetch_ev_meta_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch variable metadata from EpiVault — fetch_ev_meta_vars","title":"Fetch variable metadata from EpiVault — fetch_ev_meta_vars","text":"Interprets ev_variables container, fetches variable metadata EpiVault returns data frame. Can fetch either variable level information categorical value labels depending cats parameter. See Arguments Details.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/fetch_ev_meta_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch variable metadata from EpiVault — fetch_ev_meta_vars","text":"","code":"fetch_ev_meta_vars(con, ev_vars, visibility = 0, cats = FALSE)"},{"path":"https://borninbradford.github.io/epivaultr/reference/fetch_ev_meta_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch variable metadata from EpiVault — fetch_ev_meta_vars","text":"con EpiVault connection object ev_vars ev_variables container visibility (default=0) Maximum visibility level requested. See examples. cats (default=FALSE) TRUE, return categorical value labels, otherwise return variable level metadata","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/fetch_ev_meta_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch variable metadata from EpiVault — fetch_ev_meta_vars","text":"data frame","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/fetch_ev_meta_vars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fetch variable metadata from EpiVault — fetch_ev_meta_vars","text":"cats=TRUE returns category metadata, otherwise (default) returns variable metadata: variable (default) Variable level information name, label, description, keywords summary stats. category Value labels categorical variables, one row per value. Returns variable name, value label.","code":""},{"path":[]},{"path":"https://borninbradford.github.io/epivaultr/reference/fetch_ev_meta_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch variable metadata from EpiVault — fetch_ev_meta_vars","text":"","code":"if (FALSE) {  con <- ev_connect()  # read a variable data request file vars <- read_ev_variables(\"path/to/variables/file\")  # fetch variable metadata from EpiVault - default visibility for standard data requests meta <- fetch_ev_meta_vars(con, vars)  # fetch variable metadata from EpiVault - highest visibility to access sensitive variables meta <- fetch_ev_meta_vars(con, vars, visibility = 9)  # fetch categorical metadata from EpiVault meta <- fetch_ev_meta_vars(con, vars, cats = TRUE)  }"},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get single data frame — get_ev_data","title":"Get single data frame — get_ev_data","text":"Returns selected data frame ev_data container.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get single data frame — get_ev_data","text":"","code":"get_ev_data(ev_data, df_name = character(0), df_index = integer(0))"},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get single data frame — get_ev_data","text":"ev_data ev_data container df_name name data frame. used df_index supplied df_index numerical index data frame within ev_data container. Overrides df_name supplied.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get single data frame — get_ev_data","text":"data frame","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get single data frame — get_ev_data","text":"data frame can selected index (1, 2, 3 etc.) name (project.table). names data frames within ev_data container can queried using get_ev_data_names. ev_data container can created using fetch_ev_data.","code":""},{"path":[]},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get single data frame — get_ev_data","text":"","code":"if (FALSE) {  con <- ev_connect()  # read a variable data request file vars <- read_ev_variables(\"path/to/variables/file\") # fetch the data from EpiVault dat <- fetch_ev_data(con, vars)  # get a data frame by name get_ev_data(dat, df_name = \"proj1.tab1\") # get a data frame by index get_ev_data(dat, df_index = 1)  }"},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_data_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get table/data frame names — get_ev_data_names","title":"Get table/data frame names — get_ev_data_names","text":"Returns names data frames ev_data container.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_data_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get table/data frame names — get_ev_data_names","text":"","code":"get_ev_data_names(ev_data)"},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_data_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get table/data frame names — get_ev_data_names","text":"ev_data ev_data container","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_data_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get table/data frame names — get_ev_data_names","text":"character vector data names","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_data_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get table/data frame names — get_ev_data_names","text":"returned values can used call get_ev_data. ev_data container can created using fetch_ev_data.","code":""},{"path":[]},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_data_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get table/data frame names — get_ev_data_names","text":"","code":"if (FALSE) {  con <- ev_connect()  # read a variable data request file vars <- read_ev_variables(\"path/to/variables/file\") # fetch the data from EpiVault dat <- fetch_ev_data(con, vars)  # get the data frame names get_ev_data_names(dat)  }"},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get single metadata table — get_ev_metadata","title":"Get single metadata table — get_ev_metadata","text":"Returns metadata selected type ev_data container.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get single metadata table — get_ev_metadata","text":"","code":"get_ev_metadata(ev_data, type = character(0))"},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get single metadata table — get_ev_metadata","text":"ev_data ev_data container type One c('variable', 'category', 'table'). recognised, returns empty data frame.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get single metadata table — get_ev_metadata","text":"data frame metadata","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get single metadata table — get_ev_metadata","text":"Three types metadata can returned: variable Variable level information name, label, description, keywords summary stats. category Value labels categorical variables, one row per value. Returns variable name, value label. table Table level information name, cohort membership, entity type, subjects respondents table description. ev_data container can created using fetch_ev_data.","code":""},{"path":[]},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get single metadata table — get_ev_metadata","text":"","code":"if (FALSE) {  con <- ev_connect()  # read a variable data request file vars <- read_ev_variables(\"path/to/variables/file\") # fetch the data from EpiVault dat <- fetch_ev_data(con, vars)  # get variable metadata get_ev_metadata(dat, type = \"variable\") # get category metadata get_ev_metadata(dat, type = \"category\") # get table metadata get_ev_metadata(dat, type = \"table\")  }"},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_projects.html","id":null,"dir":"Reference","previous_headings":"","what":"Get project names — get_ev_projects","title":"Get project names — get_ev_projects","text":"Returns project names ev_variables container.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_projects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get project names — get_ev_projects","text":"","code":"get_ev_projects(ev_vars)"},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_projects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get project names — get_ev_projects","text":"ev_vars ev_variables container","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_projects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get project names — get_ev_projects","text":"character vector project names","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_projects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get project names — get_ev_projects","text":"ev_variables container can created using read_ev_variables.","code":""},{"path":[]},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_projects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get project names — get_ev_projects","text":"","code":"if (FALSE) {  # read a variable data request file vars <- read_ev_variables(\"path/to/variables/file\")  # get the project names from the request get_ev_projects(vars)  }"},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get table names — get_ev_tables","title":"Get table names — get_ev_tables","text":"Returns table names ev_variables container.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get table names — get_ev_tables","text":"","code":"get_ev_tables(ev_vars)"},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get table names — get_ev_tables","text":"ev_vars ev_variables container","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get table names — get_ev_tables","text":"character vector table names","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get table names — get_ev_tables","text":"ev_variables container can created using read_ev_variables.","code":""},{"path":[]},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get table names — get_ev_tables","text":"","code":"if (FALSE) {  # read a variable data request file vars <- read_ev_variables(\"path/to/variables/file\")  # get the table names from the request get_ev_tables(vars)  }"},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variables names — get_ev_variables","title":"Get variables names — get_ev_variables","text":"Returns fully qualified variable names ev_variables container.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variables names — get_ev_variables","text":"","code":"get_ev_variables(ev_vars)"},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get variables names — get_ev_variables","text":"ev_vars ev_variables container","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variables names — get_ev_variables","text":"character vector variable names","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_variables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get variables names — get_ev_variables","text":"ev_variables container can created using read_ev_variables.","code":""},{"path":[]},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get variables names — get_ev_variables","text":"","code":"if (FALSE) {  # read a variable data request file vars <- read_ev_variables(\"path/to/variables/file\")  # get the variable names from the request get_ev_variables(vars)  }"},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_vars_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variables data frame — get_ev_vars_df","title":"Get variables data frame — get_ev_vars_df","text":"Returns variable data frame ev_variables container.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_vars_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variables data frame — get_ev_vars_df","text":"","code":"get_ev_vars_df(ev_vars)"},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_vars_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get variables data frame — get_ev_vars_df","text":"ev_vars ev_variables container","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_vars_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variables data frame — get_ev_vars_df","text":"data frame containing fully qualified variable name, project name, table name variable name.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_vars_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get variables data frame — get_ev_vars_df","text":"variable data frame contains four columns: varfullname Fully qualified variable name, .e. project.table.variable project Project name table Table name variable Variable name ev_variables container can created using read_ev_variables.","code":""},{"path":[]},{"path":"https://borninbradford.github.io/epivaultr/reference/get_ev_vars_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get variables data frame — get_ev_vars_df","text":"","code":"if (FALSE) {  # read a variable data request file vars <- read_ev_variables(\"path/to/variables/file\")  # get the variable data frame from the request get_ev_vars_df(vars)  }"},{"path":"https://borninbradford.github.io/epivaultr/reference/make_ev_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Make ev_variables container — make_ev_variables","title":"Make ev_variables container — make_ev_variables","text":"Converts character vector fully qualified variable names ev_variables container.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/make_ev_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make ev_variables container — make_ev_variables","text":"","code":"make_ev_variables(vars)"},{"path":"https://borninbradford.github.io/epivaultr/reference/make_ev_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make ev_variables container — make_ev_variables","text":"vars Character vector fully qualified variable names","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/make_ev_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make ev_variables container — make_ev_variables","text":"ev_variables container","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/make_ev_variables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make ev_variables container — make_ev_variables","text":"called data request functions read_ev_variables ev_simple_fetch normally call directly. However, may circumstances list variable names wish convert ev_variables container.","code":""},{"path":[]},{"path":"https://borninbradford.github.io/epivaultr/reference/make_ev_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make ev_variables container — make_ev_variables","text":"","code":"if (FALSE) {  vars <- c(\"proj1.tab1.var1\", \"proj1.tab1.var2\", \"proj2.tab2.var1\") make_ev_variables(vars)  }"},{"path":"https://borninbradford.github.io/epivaultr/reference/read_ev_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Read variables from a file — read_ev_variables","title":"Read variables from a file — read_ev_variables","text":"Reads variables file ev_variables container. Supports delimited fixed width text Excel formats. try guess format based file extension first lines.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/read_ev_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read variables from a file — read_ev_variables","text":"","code":"read_ev_variables(file)"},{"path":"https://borninbradford.github.io/epivaultr/reference/read_ev_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read variables from a file — read_ev_variables","text":"file Path file read","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/read_ev_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read variables from a file — read_ev_variables","text":"ev_variables container","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/read_ev_variables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read variables from a file — read_ev_variables","text":"Builds character vector fully qualified variable names passes make_ev_variables.","code":""},{"path":[]},{"path":"https://borninbradford.github.io/epivaultr/reference/read_ev_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read variables from a file — read_ev_variables","text":"","code":"if (FALSE) {  # read a variable data request file vars <- read_ev_variables(\"path/to/variables/file\")  }"},{"path":"https://borninbradford.github.io/epivaultr/reference/write_ev_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write data files — write_ev_data","title":"Write data files — write_ev_data","text":"Writes data metadata ev_data container specified file format.","code":""},{"path":"https://borninbradford.github.io/epivaultr/reference/write_ev_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write data files — write_ev_data","text":"","code":"write_ev_data(   ev_data,   path,   name = \"ev_data\",   format = \"stata\",   metadata = FALSE )"},{"path":"https://borninbradford.github.io/epivaultr/reference/write_ev_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write data files — write_ev_data","text":"ev_data ev_data container path Path folder save files name (default='ev_data') name data request. Used prefix every output file. format (default='stata') File format write . One c('stata', 'csv'). metadata (default=FALSE) TRUE, also output files variable, category table metadata.","code":""},{"path":[]},{"path":"https://borninbradford.github.io/epivaultr/reference/write_ev_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write data files — write_ev_data","text":"","code":"if (FALSE) {  con <- ev_connect()  # read a variable data request file vars <- read_ev_variables(\"path/to/variables/file\")  # fetch the data from EpiVault ev <- fetch_ev_data(con, vars)  # write the data files in default stata format, excluding metadata write_ev_data(ev_data = ev,               path = \"path/to/data/request/folder\",               name = \"request101\" )  # write the data files in csv format, including metadata write_ev_data(ev_data = ev,               path = \"path/to/data/request/folder\",               name = \"request101\",               format = 'csv',               metadata = TRUE )  }"}]
